from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
import bot.keyboards.keyboards as kb


from bot.states import OrderState
from aiogram.fsm.context import FSMContext
from database.models.requests import (
    create_order,
    get_orders,
)
from .schemas import OrderBase
from sqlalchemy.ext.asyncio import AsyncSession
from bot.config.config import get_config

commands_router = Router()
config = get_config()


@commands_router.message(CommandStart())
async def start(message: Message):
    await message.reply(
        """üåü –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å!
        
–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à —É–¥–æ–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Ö —Å—Ç–∞—Ç—É—Å–∞. 
–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! üòä""",
        reply_markup=kb.main_menu,
    )


@commands_router.callback_query(F.data == "to_order")
async def to_order_frst(callback: CallbackQuery, state: FSMContext):
    sent_message = await callback.message.edit_text("Enter name your order")
    await state.update_data(
        last_message_id=sent_message.message_id
    )  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(OrderState.order_name)


@commands_router.message(OrderState.order_name)
async def to_order_scnd(message: Message, state: FSMContext, session: AsyncSession):
    await state.update_data(order_name=message.text)
    await message.delete()

    user_id = message.from_user.id
    order = await state.get_data()
    order_create = OrderBase(
        user_id=user_id, order_name=order["order_name"], status="–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", id=None)

    await create_order(session, order_create)
    await state.clear()

    last_message_id = order.get("last_message_id")

    if last_message_id:
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=last_message_id,
            text="Your order was sent.",
            reply_markup=kb.go_back,
        )


@commands_router.callback_query(F.data == "status")
async def user_orders(callback: CallbackQuery, session: AsyncSession):
    orders = await get_orders(session=session, user_id=callback.from_user.id)
    if not orders:
        await callback.message.edit_text(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤", reply_markup=kb.go_back
        )
        return
    orders_text = "\n".join(
        f"{order.id} - {order.order_name} - {order.status}"
        for i, order in enumerate(orders)
    )
    await callback.message.edit_text(
        f"–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:\n\n{orders_text}", reply_markup=kb.go_back
    )


@commands_router.callback_query(F.data == "back")
async def menu_1(callback: CallbackQuery):
    # await callback.answer()
    await callback.message.edit_text(
        """üåü –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å!
        
–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à —É–¥–æ–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Ö —Å—Ç–∞—Ç—É—Å–∞. 
–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\
–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! üòä""",
        reply_markup=kb.main_menu,
    )
